plugins {
    id 'java'
    id 'java-library'
}

configurations.all {
    //resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

// Version strings used for CI
// Note the spaces before and after the equals sign
ext.majorVersion = 6
ext.minorVersion = 2
ext.minecraftVersion = "1.13.2"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    // mavenLocal()
    maven {
        name 'spigot-repo'
        url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    maven {
        name 'sonatype'
        url 'https://oss.sonatype.org/content/groups/public'
    }

    maven {
        name 'vault-repo'
        url 'http://nexus.hc.to/content/repositories/pub_releases'
    }

    maven {
        name 'EssentialsX'
        url 'https://ci.ender.zone/plugin/repository/everything'
    }

    maven {
        name 'NyaaCentral'
        url 'https://raw.githubusercontent.com/NyaaCat/NyaaCentral/maven-repo'
    }
}

dependencies {
    // spigot
    compileOnly "org.spigotmc:spigot-api:$minecraftVersion-R0.1-SNAPSHOT"

    // other nyaa plugins
    if (gradle.hasProperty("useLocalDependencies") && gradle.useLocalDependencies) {
        compileOnly project(":NyaaCore")
        compileOnly project(":LanguageUtils")
    } else {
        compileOnly('cat.nyaa:nyaacore:6.3-SNAPSHOT') { transitive = false }
        compileOnly('cat.nyaa:LangUtils:2.1-SNAPSHOT') { transitive = false }
    }

    // 3rd party plugins
    compileOnly ('net.milkbowl.vault:VaultAPI:1.7') { transitive = false }
    compileOnly ('net.ess3:EssentialsX:2.16.0') { transitive = false }
    compileOnly files('lib/LocketteProAPI.jar')

    // annotation processor
    compileOnly 'org.librazy:NyaaUtilsLangChecker:2.0-SNAPSHOT'
    annotationProcessor 'org.librazy:NyaaUtilsLangChecker:2.0-SNAPSHOT'
    annotationProcessor "org.spigotmc:spigot-api:$minecraftVersion-R0.1-SNAPSHOT"
    api 'javax.persistence:javax.persistence-api:2.2'
}

compileJava {
    // extra config for NyaaCore Language string
    String nyaaCoreLangDir = gradle.hasProperty("NyaaCoreLangDirs") ? gradle.NyaaCoreLangDirs : null
    if (nyaaCoreLangDir == null) { nyaaCoreLangDir = System.getenv("NYAACORE_LANG_DIR") }
    options.compilerArgs += ["-Xplugin:NyaaUtilsLangAnnotationProcessor", "-Xlint:deprecation", "-Xlint:unchecked"]
    if (nyaaCoreLangDir != null) {
        options.compilerArgs += ["-ALANG_DIR_ADDITIONAL_PATH=" + nyaaCoreLangDir]
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    (options as StandardJavadocDocletOptions).with {
        links 'https://docs.oracle.com/javase/8/docs/api/'
        links 'https://hub.spigotmc.org/javadocs/spigot/'
        links 'https://google.github.io/guava/releases/21.0/api/docs/'
        links 'https://nyaacat.github.io/NyaaCentral/NyaaCore/6.3-mc1.13.2/javadoc/'
        links 'https://ci.md-5.net/job/BungeeCord/ws/chat/target/apidocs/'
        links 'https://netty.io/4.1/api/'

        locale 'en_US'
        encoding 'UTF-8'
        docEncoding 'UTF-8'
        addBooleanOption('keywords', true)

        def currentJavaVersion = JavaVersion.current()
        if (currentJavaVersion > JavaVersion.VERSION_1_9) {
            options.addBooleanOption('html5', true)
        }

        windowTitle = "HamsterEcoHelper Javadoc"
        String fullVersion = System.getenv("FULL_VERSION_STRING")
        if (fullVersion != null) {
            if (minecraftVersion != branch) {
                fullVersion += " (" + branch + ")"
            }
            docTitle = "<b>HamsterEcoHelper</b> " + fullVersion
        } else {
            docTitle = "<b>HamsterEcoHelper</b>"
        }
    }
}
